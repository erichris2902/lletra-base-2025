# Generated by Django 5.2.4 on 2025-09-02 07:39

import datetime
import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FacturapiClient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('commercial_name', models.CharField(max_length=150, verbose_name='Nombre comercial')),
                ('business_name', models.CharField(max_length=150, verbose_name='Razón social')),
                ('regimen_fiscal', models.CharField(blank=True, choices=[('601', '601 - General de Ley Personas Morales'), ('603', '603 - Personas Morales con Fines no Lucrativos'), ('605', '605 - Sueldos y Salarios e Ingresos Asimilados a Salarios'), ('606', '606 - Arrendamiento'), ('607', '607 - Régimen de Enajenación o Adquisición de Bienes'), ('608', '608 - Demás ingresos'), ('609', '609 - Consolidación'), ('611', '611 - Ingresos por Dividendos (socios y accionistas)'), ('612', '612 - Personas Físicas con Actividades Empresariales y Profesionales'), ('614', '614 - Ingresos por intereses'), ('615', '615 - Régimen de los ingresos por obtención de premios'), ('616', '616 - Sin obligaciones fiscales'), ('620', '620 - Sociedades Cooperativas de Producción que optan por Diferir sus Ingresos'), ('621', '621 - Incorporación Fiscal'), ('622', '622 - Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'), ('623', '623 - Opcional para Grupos de Sociedades'), ('624', '624 - Coordinados'), ('625', '625 - Régimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas'), ('626', '626 - Régimen Simplificado de Confianza'), ('628', '628 - Hidrocarburos'), ('629', '629 - De los Regímenes Fiscales Preferentes y de las Empresas Multinacionales'), ('630', '630 - Enajenación de acciones en bolsa de valores')], default='601', max_length=200, null=True, verbose_name='Régimen fiscal')),
                ('rfc', models.CharField(max_length=30, verbose_name='RFC')),
                ('email', models.CharField(max_length=80, verbose_name='Correo de facturación')),
                ('tel', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('cp', models.CharField(blank=True, max_length=10, null=True, verbose_name='Código postal')),
            ],
            options={
                'verbose_name': 'Cliente de FacturAPI',
                'verbose_name_plural': 'Clientes de FacturAPI',
                'ordering': ['commercial_name'],
            },
        ),
        migrations.CreateModel(
            name='FacturapiProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre del producto')),
                ('sku', models.CharField(max_length=255, unique=True, verbose_name='Clave SKU')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('product_key', models.CharField(max_length=20, verbose_name='Clave de producto SAT')),
                ('unit_key', models.CharField(max_length=5, verbose_name='Clave de unidad SAT')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio sin IVA')),
            ],
            options={
                'verbose_name': 'FacturAPI Product',
                'verbose_name_plural': 'FacturAPI Products',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='FacturapiTax',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=40, verbose_name='Identificador')),
                ('type', models.CharField(choices=[('IVA', 'IVA'), ('ISR', 'ISR'), ('IEPS', 'IEPS')], default='IVA', max_length=10, verbose_name='Impuesto')),
                ('rate', models.DecimalField(decimal_places=4, max_digits=6, verbose_name='Tasa')),
                ('factor', models.CharField(choices=[('Tasa', 'Tasa'), ('Cuota', 'Cuota'), ('Exento', 'Exento')], default='Tasa', max_length=10, verbose_name='Factor')),
                ('withholding', models.BooleanField(default=False, verbose_name='Marcado = Retencion, Desmarcado = Translado')),
                ('is_retained', models.BooleanField(default=False, verbose_name='¿Es retenido?')),
                ('is_quota', models.BooleanField(default=False, verbose_name='¿Es cuota?')),
            ],
            options={
                'verbose_name': 'FacturAPI Tax',
                'verbose_name_plural': 'FacturAPI Taxes',
                'ordering': ['type', 'rate'],
            },
        ),
        migrations.CreateModel(
            name='FacturapiInvoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('facturapi_id', models.CharField(blank=True, help_text='Identificador de la factura en FacturAPI', max_length=255, null=True, unique=True, verbose_name='ID de FacturAPI')),
                ('type', models.CharField(choices=[('I', 'I: Factura'), ('E', 'E: Nota de Crédito'), ('P', 'P: Complemento de pago'), ('T', 'T: Translado'), ('N', 'N: Nomina')], default='I', max_length=2, verbose_name='Tipo de comprobante')),
                ('use', models.CharField(blank=True, choices=[('D01', 'Honorarios médicos, dentales y gastos hospitalarios.'), ('D02', 'Gastos médicos por incapacidad o discapacidad'), ('D03', 'Gastos funerales.'), ('D04', 'Donativos.'), ('D05', 'Intereses reales efectivamente pagados por créditos hipotecarios (casa habitación).'), ('D06', 'Aportaciones voluntarias al SAR.'), ('D07', 'Primas por seguros de gastos médicos.'), ('D08', 'Gastos de transportación escolar obligatoria.'), ('D09', 'Depósitos en cuentas para el ahorro, primas que tengan como base planes de pensiones.'), ('D10', 'Pagos por servicios educativos (colegiaturas)'), ('G01', 'Adquisición de mercancias'), ('G02', 'Devoluciones, descuentos o bonificaciones'), ('G03', 'Gastos en general'), ('I01', 'Construcciones'), ('I02', 'Mobilario y equipo de oficina por inversiones'), ('I03', 'Equipo de transporte'), ('I04', 'Equipo de computo y accesorios'), ('I05', 'Dados, troqueles, moldes, matrices y herramental'), ('I06', 'Comunicaciones telefónicas'), ('I07', 'Comunicaciones satelitales'), ('I08', 'Otra maquinaria y equipo'), ('P01', 'Por definir')], default='G03', max_length=5, null=True, verbose_name='Uso del CFDI')),
                ('payment_form', models.CharField(choices=[('PUE', 'PUE'), ('PPD', 'PPD')], default='PPD', max_length=5, verbose_name='Forma de pago')),
                ('payment_method', models.CharField(blank=True, choices=[('01', '01: Efectivo'), ('02', '02: Cheque nominativo'), ('03', '03: Transferencia electrónica de fondos'), ('04', '04: Tarjeta de crédito'), ('05', '05: Monedero electrónico'), ('06', '06: Dinero electrónico'), ('08', '08: Vales de despensa'), ('12', '12: Dación en pago'), ('13', '13: Pago por subrogación'), ('14', '14: Pago por consignación'), ('15', '15: Condonación'), ('17', '17: Compensación'), ('23', '23: Novación'), ('24', '24: Confusión'), ('25', '25: Remisión de deuda'), ('26', '26: Prescripción o caducidad'), ('27', '27: A satisfacción del acreedor'), ('28', '28: Tarjeta de débito'), ('29', '29: Tarjeta de servicios'), ('30', '30: Aplicación de anticipos'), ('31', '31: Intermediarios'), ('99', '99: Por definir')], default='99', max_length=3, null=True, verbose_name='Método de pago')),
                ('currency', models.CharField(default='MXN', max_length=10, verbose_name='Moneda')),
                ('pdf_custom_section', models.TextField(blank=True, null=True, verbose_name='Sección personalizada del PDF')),
                ('relation_type', models.CharField(blank=True, choices=[('01', '01 - Nota de crédito de los documentos relacionados'), ('02', '02 - Nota de débito de los documentos relacionados'), ('03', '03 - Devolución de mercancía sobre facturas o traslados previos'), ('04', '04 - Sustitución de los CFDI previos'), ('05', '05 - Traslados de mercancias facturados previamente'), ('06', '06 - Factura generada por los traslados previos'), ('07', '07 - CFDI por aplicación de anticipo'), ('08', '08 - Factura generada por pagos en parcialidades'), ('09', '09 - Factura generada por pagos diferidos')], max_length=5, null=True, verbose_name='CFDI Relacionados')),
                ('related_uuids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), blank=True, null=True, size=None, verbose_name='Folios fiscales (UUID) relacionados')),
                ('idempotency_key', models.CharField(blank=True, max_length=36, null=True, verbose_name='idempotency_key')),
                ('status', models.CharField(choices=[('valid', 'Vigente'), ('canceled', 'Cancelado'), ('pending', 'Pendiente'), ('draft', 'Draft')], default='valid', max_length=10, verbose_name='Estatus')),
                ('is_ready_to_stamp', models.BooleanField(default=True, verbose_name='¿Listo para timbrar?')),
                ('uuid', models.CharField(blank=True, max_length=36, null=True, verbose_name='UUID del SAT')),
                ('series', models.CharField(blank=True, max_length=50, null=True, verbose_name='Serie')),
                ('folio_number', models.IntegerField(blank=True, null=True, verbose_name='Folio')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total')),
                ('stamp_date', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de timbrado')),
                ('sat_cert_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de certificado SAT')),
                ('verification_url', models.URLField(blank=True, null=True, verbose_name='URL de verificación del SAT')),
                ('sat_signature', models.TextField(blank=True, null=True, verbose_name='Sello del SAT')),
                ('signature', models.TextField(blank=True, null=True, verbose_name='Sello del emisor')),
                ('cancellation_status', models.CharField(blank=True, max_length=20, null=True, verbose_name='Estatus de cancelación')),
                ('related_documents', models.JSONField(blank=True, null=True, verbose_name='Documentos relacionados')),
                ('target_invoice_ids', models.JSONField(blank=True, null=True, verbose_name='Facturas destino relacionadas')),
                ('received_payment_ids', models.JSONField(blank=True, null=True, verbose_name='Pagos relacionados recibidos')),
                ('complements', models.JSONField(blank=True, null=True, verbose_name='Complementos CFDI')),
                ('facturapi_response', models.JSONField(blank=True, help_text='Respuesta original de FacturAPI al timbrar o consultar', null=True, verbose_name='Respuesta completa de FacturAPI')),
                ('is_live', models.BooleanField(default=False, verbose_name='¿Entorno Live?')),
                ('canceled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelado el')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='facturapi.facturapiclient', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'FacturAPI Invoice',
                'verbose_name_plural': 'FacturAPI Invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacturapiInvoiceItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cantidad')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Descuento')),
                ('description', models.CharField(max_length=255, verbose_name='Descripción')),
                ('product_key', models.CharField(max_length=20, verbose_name='Clave de producto SAT')),
                ('unit_key', models.CharField(max_length=5, verbose_name='Clave de unidad SAT')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio unitario')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Subtotal')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Total')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='facturapi.facturapiinvoice', verbose_name='Factura')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoice_items', to='facturapi.facturapiproduct', verbose_name='Producto/Servicio')),
            ],
            options={
                'verbose_name': 'FacturAPI Invoice Item',
                'verbose_name_plural': 'FacturAPI Invoice Items',
                'ordering': ['invoice', 'id'],
            },
        ),
        migrations.AddField(
            model_name='facturapiproduct',
            name='taxes',
            field=models.ManyToManyField(blank=True, related_name='products', to='facturapi.facturapitax', verbose_name='Impuestos'),
        ),
        migrations.CreateModel(
            name='FacturapiInvoicePayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('uuid', models.CharField(max_length=100, verbose_name='UUID relacionado al pago')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Pago actual del comprobante')),
                ('installment', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Número de parcialidad del pago')),
                ('last_balance', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Pendiente por pagar anteriormente')),
                ('payment_day', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de pago (dd/mm/yyyy)')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='facturapi.facturapiinvoice', verbose_name='Factura')),
                ('taxes', models.ManyToManyField(to='facturapi.facturapitax', verbose_name='Impuestos')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
