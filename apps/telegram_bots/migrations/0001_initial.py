# Generated by Django 5.2.4 on 2025-09-02 07:39

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('openai_assistant', '0001_initial'),
        ('operations_panel', '0001_initial'),
        ('sales_panel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramBot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Bot Username')),
                ('token', models.CharField(max_length=255, unique=True, verbose_name='Bot Token')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('webhook_url', models.URLField(blank=True, verbose_name='Webhook URL')),
                ('webhook_set', models.BooleanField(default=False, verbose_name='Webhook Set')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
            ],
            options={
                'verbose_name': 'Telegram Bot',
                'verbose_name_plural': 'Telegram Bots',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last Name')),
                ('language_code', models.CharField(blank=True, max_length=10, verbose_name='Language Code')),
                ('is_bot', models.BooleanField(default=False, verbose_name='Is Bot')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Telegram User',
                'verbose_name_plural': 'Telegram Users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram Group ID')),
                ('name', models.CharField(max_length=255, verbose_name='Group Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('contact_info', models.TextField(blank=True, help_text='Contact information for the group administrator or relevant contacts', verbose_name='Contact Information')),
                ('assigned_assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_telegram_groups', to='openai_assistant.assistant', verbose_name='Assigned Assistant')),
            ],
            options={
                'verbose_name': 'Telegram Group',
                'verbose_name_plural': 'Telegram Groups',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramChat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram Chat ID')),
                ('type', models.CharField(choices=[('private', 'Private'), ('group', 'Group'), ('supergroup', 'Supergroup'), ('channel', 'Channel')], max_length=20, verbose_name='Chat Type')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Title')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Username')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('active_assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='telegram_chats', to='openai_assistant.assistant')),
                ('openai_chat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='telegram_chat', to='openai_assistant.chat')),
                ('telegram_group', models.ForeignKey(blank=True, help_text='Associated Telegram Group (for group chats only)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='telegram_chats', to='telegram_bots.telegramgroup')),
                ('participants', models.ManyToManyField(blank=True, related_name='chats', to='telegram_bots.telegramuser')),
            ],
            options={
                'verbose_name': 'Telegram Chat',
                'verbose_name_plural': 'Telegram Chats',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_id', models.BigIntegerField(verbose_name='Telegram Message ID')),
                ('text', models.TextField(blank=True, verbose_name='Text')),
                ('media_type', models.CharField(blank=True, max_length=50, verbose_name='Media Type')),
                ('media_file_id', models.CharField(blank=True, max_length=255, verbose_name='Media File ID')),
                ('media_url', models.URLField(blank=True, verbose_name='Media URL')),
                ('image', models.ImageField(blank=True, null=True, upload_to='telegram_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='telegram_bots.telegrambot')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='telegram_bots.telegramchat')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='telegram_messages', to='operations_panel.operation')),
                ('quote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='telegram_quote', to='sales_panel.quotation')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='telegram_bots.telegrammessage')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages', to='telegram_bots.telegramuser')),
            ],
            options={
                'verbose_name': 'Telegram Message',
                'verbose_name_plural': 'Telegram Messages',
                'ordering': ['created_at'],
                'unique_together': {('telegram_id', 'chat')},
            },
        ),
        migrations.CreateModel(
            name='TelegramWebApp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('url', models.URLField(verbose_name='URL')),
                ('button_text', models.CharField(max_length=255, verbose_name='Button Text')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webapps', to='telegram_bots.telegrambot')),
            ],
            options={
                'verbose_name': 'Telegram WebApp',
                'verbose_name_plural': 'Telegram WebApps',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('emoji', models.CharField(max_length=50, verbose_name='Emoji')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='telegram_bots.telegrammessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='telegram_bots.telegramuser')),
            ],
            options={
                'verbose_name': 'Telegram Reaction',
                'verbose_name_plural': 'Telegram Reactions',
                'ordering': ['-created_at'],
                'unique_together': {('message', 'user', 'emoji')},
            },
        ),
    ]
