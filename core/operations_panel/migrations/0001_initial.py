# Generated by Django 5.2.4 on 2025-09-02 07:39

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('google_drive', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='Calle')),
                ('exterior_number', models.CharField(blank=True, max_length=35, null=True, verbose_name='Número exterior')),
                ('interior_number', models.CharField(blank=True, max_length=35, null=True, verbose_name='Número interior')),
                ('colony', models.CharField(blank=True, max_length=100, null=True, verbose_name='Colonia')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad')),
                ('state', models.CharField(choices=[('', 'Seleccion el estado'), ('Aguascalientes', 'Aguascalientes'), ('Baja California', 'Baja California'), ('Baja California Sur', 'Baja California Sur'), ('Campeche', 'Campeche'), ('Chiapas', 'Chiapas'), ('Chihuahua', 'Chihuahua'), ('Coahuila  de Zaragoza', 'Coahuila de Zaragoza'), ('Colima', 'Colima'), ('Ciudad de México', 'Ciudad de México'), ('Cdmx', 'Cdmx'), ('Durango', 'Durango'), ('Guanajuato', 'Guanajuato'), ('Guerrero', 'Guerrero'), ('Hidalgo', 'Hidalgo'), ('Jalisco', 'Jalisco'), ('Mexico', 'Mexico'), ('Michoacan de Ocampo', 'Michoacan de Ocampo'), ('Morelos', 'Morelos'), ('Nayarit', 'Nayarit'), ('Nuevo Leon', 'Nuevo Leon'), ('Oaxaca', 'Oaxaca'), ('Puebla', 'Puebla'), ('Queretaro de Arteaga', 'Queretaro de Arteaga'), ('Quintana', 'Quintana Roo'), ('San Luis Potosi', 'San Luis Potosi'), ('Sinaloa', 'Sinaloa'), ('Sonora', 'Sonora'), ('Tabasco', 'Tabasco'), ('Tamaulipas', 'Tamaulipas'), ('Tlaxcala', 'Tlaxcala'), ('Veracruz', 'Veracruz'), ('Yucatan', 'Yucatan'), ('Zacatecas', 'Zacatecas')], max_length=50, verbose_name='Estado')),
                ('zip_code', models.CharField(max_length=10, verbose_name='Código postal')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitud')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitud')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identificador')),
            ],
            options={
                'verbose_name': 'Carga',
                'verbose_name_plural': 'Cargas',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=100, verbose_name='Apellido paterno')),
                ('mother_last_name', models.CharField(max_length=100, verbose_name='Apellido materno')),
                ('rfc', models.CharField(max_length=13, verbose_name='RFC')),
                ('license_number', models.CharField(max_length=20, verbose_name='Número de licencia')),
                ('license_type', models.CharField(max_length=20, verbose_name='Tipo de licencia')),
                ('license_expiration', models.DateField(verbose_name='Vencimiento de licencia')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
            ],
            options={
                'verbose_name': 'Conductor',
                'verbose_name_plural': 'Conductores',
            },
        ),
        migrations.CreateModel(
            name='TransportedProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('transported_product_key', models.CharField(max_length=100, verbose_name='Bienes transportados')),
                ('unit_key', models.CharField(max_length=100, verbose_name='Clave SAT')),
                ('description', models.CharField(max_length=100, verbose_name='Descripcion del bien')),
                ('currency', models.CharField(default='MXN', max_length=100, verbose_name='Moneda')),
                ('is_danger', models.BooleanField(default=False, verbose_name='¿Es material peligroso del tipo 0,1?')),
                ('weight', models.FloatField(verbose_name='Peso en Kg')),
                ('amount', models.IntegerField(verbose_name='Cantidad')),
            ],
            options={
                'verbose_name': 'Producto transportado',
                'verbose_name_plural': 'Productos transportados',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre comercial')),
                ('business_name', models.CharField(max_length=100, verbose_name='Razón social')),
                ('rfc', models.CharField(blank=True, max_length=13, null=True, verbose_name='RFC')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo electrónico')),
                ('phone', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('tax_regime', models.CharField(choices=[('601', '601 - General de Ley Personas Morales'), ('603', '603 - Personas Morales con Fines no Lucrativos'), ('605', '605 - Sueldos y Salarios e Ingresos Asimilados a Salarios'), ('606', '606 - Arrendamiento'), ('607', '607 - Régimen de Enajenación o Adquisición de Bienes'), ('608', '608 - Demás ingresos'), ('609', '609 - Consolidación'), ('611', '611 - Ingresos por Dividendos (socios y accionistas)'), ('612', '612 - Personas Físicas con Actividades Empresariales y Profesionales'), ('614', '614 - Ingresos por intereses'), ('615', '615 - Régimen de los ingresos por obtención de premios'), ('616', '616 - Sin obligaciones fiscales'), ('620', '620 - Sociedades Cooperativas de Producción que optan por Diferir sus Ingresos'), ('621', '621 - Incorporación Fiscal'), ('622', '622 - Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'), ('623', '623 - Opcional para Grupos de Sociedades'), ('624', '624 - Coordinados'), ('625', '625 - Régimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas'), ('626', '626 - Régimen Simplificado de Confianza'), ('628', '628 - Hidrocarburos'), ('629', '629 - De los Regímenes Fiscales Preferentes y de las Empresas Multinacionales'), ('630', '630 - Enajenación de acciones en bolsa de valores')], default='601', max_length=3, verbose_name='Régimen fiscal')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='operations_panel.address', verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='DeliveryLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('business_name', models.CharField(max_length=100, verbose_name='Razón social')),
                ('rfc', models.CharField(max_length=13, verbose_name='RFC')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='operations_panel.address', verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Ubicación de Entrega',
                'verbose_name_plural': 'Ubicaciones de Entrega',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('folio', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Folio')),
                ('pre_folio', models.CharField(blank=True, db_index=True, max_length=10, null=True, verbose_name='Pre-folio')),
                ('vehicle_type', models.CharField(blank=True, choices=[('TORTHON', 'TORTHON'), ('TRACTO', 'TRACTO'), ('CAJA', 'CAJA'), ('UNIDAD 1 TN', 'UNIDAD 1 TN'), ('UNIDAD 2.5 TN', 'UNIDAD 2.5 TN'), ('UNIDAD 3.5 TN', 'UNIDAD 3.5 TN'), ('UNIDAD 5 TN', 'UNIDAD 5 TN'), ('RABON', 'RABON'), ('CAJA 40’', 'CAJA 40’'), ('CAJA 48’', 'CAJA 48’'), ('CAJA 53’', 'CAJA 53’'), ('PLATAFORMA 40’', 'PLATAFORMA 40’'), ('PLATAFORMA 48’', 'PLATAFORMA 48’'), ('PIPA', 'PIPA'), ('TOLVA', 'TOLVA'), ('MADRINA', 'MADRINA'), ('VEHICULO UTILITARIO', 'VEHICULO UTILITARIO')], max_length=30, null=True, verbose_name='Tipo de unidad')),
                ('operation_date', models.DateField(verbose_name='Fecha de operación')),
                ('shipment_type', models.CharField(choices=[('3B', '3b0'), ('ASTURIANO', 'Asturiano'), ('GENERAL', 'General'), ('CHEM', 'Chem')], max_length=20, verbose_name='Tipo de embarque')),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('APPROVED', 'Aprobado'), ('IN_PROGRESS', 'En Progreso'), ('COMPLETED', 'Completado'), ('INVOICED', 'Facturado'), ('CANCELLED', 'Cancelado')], default='PENDING', max_length=20, verbose_name='Estatus')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('need_cartaporte', models.BooleanField(default=True, verbose_name='¿Requiere carta porte?')),
                ('is_rent', models.BooleanField(default=False, verbose_name='¿Es renta?')),
                ('is_packing_ready', models.BooleanField(default=False, verbose_name='¿Esta listo el packing?')),
                ('cargo_appointment', models.DateTimeField(blank=True, null=True, verbose_name='Cita de carga')),
                ('download_appointment', models.DateTimeField(blank=True, null=True, verbose_name='Cita de descarga')),
                ('scheduled_departure_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora estimada de salida')),
                ('raw_payload', models.JSONField(null=True, verbose_name='Datos sin procesar (payload)')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total antes de impuestos')),
                ('handling_amount', models.IntegerField(blank=True, default=0, null=True, verbose_name='Cantidad de maniobras')),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_panel.cargo', verbose_name='Carga asociada')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='operations_panel.client', verbose_name='Cliente')),
                ('client_folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations_client', to='google_drive.googledrivefolder', verbose_name='Carpeta del cliente en Drive')),
                ('deliveries', models.ManyToManyField(blank=True, related_name='operations_deliveries', to='operations_panel.deliverylocation', verbose_name='Entregas intermedias')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='operations_destination', to='operations_panel.deliverylocation', verbose_name='Destino')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_panel.driver', verbose_name='Conductor')),
                ('invoice_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operations_invoice', to='google_drive.googledrivefile', verbose_name='Archivo de factura en Drive')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='operations_origin', to='operations_panel.deliverylocation', verbose_name='Origen')),
            ],
            options={
                'verbose_name': 'Operación',
                'verbose_name_plural': 'Operaciones',
                'ordering': ['-operation_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DistributionPacking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('distribution', models.CharField(choices=[('CERVEZA', 'CERVEZA'), ('ABARROTE', 'ABARROTE'), ('CERVEZA Y ABARROTE', 'CERVEZA Y ABARROTE')], default='CERVEZA Y ABARROTE', max_length=20, verbose_name='Distribucion')),
                ('weight', models.FloatField(verbose_name='Peso en Kg')),
                ('amount', models.IntegerField(verbose_name='Cantidad')),
                ('delivery_shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='operations_panel.deliverylocation')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='operations_panel.operation')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('direct_distance', models.IntegerField(blank=True, default=0, null=True, verbose_name='Distancia directa (Origen-Destino) (km)')),
                ('optimized_distance', models.IntegerField(blank=True, default=0, null=True, verbose_name='Distancia total (km)')),
                ('optimized_route', models.JSONField(blank=True, null=True, verbose_name='Ruta optimizada')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='operations_panel.client', verbose_name='Cliente')),
                ('destination_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='routes_as_destination', to='operations_panel.deliverylocation', verbose_name='Destino final')),
                ('initial_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='routes_as_initial', to='operations_panel.deliverylocation', verbose_name='Ubicación inicial')),
                ('route_stops', models.ManyToManyField(blank=True, related_name='routes_as_stop', to='operations_panel.deliverylocation', verbose_name='Paradas intermedias')),
            ],
            options={
                'verbose_name': 'Ruta',
                'verbose_name_plural': 'Rutas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='operation',
            name='route',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_panel.route', verbose_name='Ruta asociada'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('business_name', models.CharField(max_length=100, verbose_name='Razón social')),
                ('tax_regime', models.CharField(choices=[('601', '601 - General de Ley Personas Morales'), ('603', '603 - Personas Morales con Fines no Lucrativos'), ('605', '605 - Sueldos y Salarios e Ingresos Asimilados a Salarios'), ('606', '606 - Arrendamiento'), ('607', '607 - Régimen de Enajenación o Adquisición de Bienes'), ('608', '608 - Demás ingresos'), ('609', '609 - Consolidación'), ('611', '611 - Ingresos por Dividendos (socios y accionistas)'), ('612', '612 - Personas Físicas con Actividades Empresariales y Profesionales'), ('614', '614 - Ingresos por intereses'), ('615', '615 - Régimen de los ingresos por obtención de premios'), ('616', '616 - Sin obligaciones fiscales'), ('620', '620 - Sociedades Cooperativas de Producción que optan por Diferir sus Ingresos'), ('621', '621 - Incorporación Fiscal'), ('622', '622 - Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'), ('623', '623 - Opcional para Grupos de Sociedades'), ('624', '624 - Coordinados'), ('625', '625 - Régimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas'), ('626', '626 - Régimen Simplificado de Confianza'), ('628', '628 - Hidrocarburos'), ('629', '629 - De los Regímenes Fiscales Preferentes y de las Empresas Multinacionales'), ('630', '630 - Enajenación de acciones en bolsa de valores')], max_length=3, verbose_name='Régimen fiscal')),
                ('rfc', models.CharField(max_length=13, verbose_name='RFC')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo electrónico')),
                ('phone', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('bank', models.CharField(max_length=100, verbose_name='Banco')),
                ('clabe', models.CharField(max_length=18, verbose_name='CLABE interbancaria')),
                ('status', models.CharField(choices=[('POR CONTACTAR', 'POR CONTACTAR'), ('CONTACTADO', 'CONTACTADO'), ('R CONTROL', 'R CONTROL'), ('DOCUMENTOS', 'DOCUMENTOS'), ('EN CAPACITACION', 'EN CAPACITACIÓN'), ('ACTIVO', 'ACTIVO')], default='ACTIVO', max_length=20, verbose_name='Estatus')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='operations_panel.address', verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
            },
        ),
        migrations.AddField(
            model_name='operation',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='operations_panel.supplier', verbose_name='Proveedor'),
        ),
        migrations.AddField(
            model_name='operation',
            name='transported_products',
            field=models.ManyToManyField(blank=True, related_name='operations_transported_products', to='operations_panel.transportedproduct', verbose_name='Productos transportados'),
        ),
        migrations.AddField(
            model_name='cargo',
            name='products',
            field=models.ManyToManyField(related_name='cargos', to='operations_panel.transportedproduct', verbose_name='Productos transportados'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('econ_number', models.CharField(max_length=20, verbose_name='Número económico')),
                ('model', models.CharField(max_length=50, verbose_name='Modelo')),
                ('brand', models.CharField(max_length=50, verbose_name='Marca')),
                ('year', models.PositiveIntegerField(verbose_name='Año')),
                ('circulation_card_number', models.CharField(max_length=50, verbose_name='Tarjeta de circulación')),
                ('serial_number', models.CharField(max_length=50, verbose_name='Número de serie')),
                ('license_plate', models.CharField(max_length=20, verbose_name='Placas')),
                ('sct_permit', models.CharField(max_length=50, verbose_name='Permiso SCT')),
                ('insurance_company', models.CharField(max_length=50, verbose_name='Aseguradora')),
                ('insurance_code', models.CharField(max_length=50, verbose_name='Póliza de seguro')),
                ('vehicle_config', models.CharField(choices=[('VL', 'VL: Light cargo vehicle'), ('C2', 'C2: Unit truck (2 front wheels, 4 rear wheels)'), ('C3', 'C3: Unit truck (2 front wheels, 6–8 rear wheels)'), ('C2R2', 'C2R2: Truck-Trailer (6 truck wheels, 8 trailer wheels)'), ('C3R2', 'C3R2: Truck-Trailer (10 truck wheels, 8 trailer wheels)'), ('C2R3', 'C2R3: Truck-Trailer (6 truck wheels, 12 trailer wheels)'), ('C3R3', 'C3R3: Truck-Trailer (10 truck wheels, 12 trailer wheels)'), ('T2S1', 'T2S1: Articulated tractor (6+4)'), ('T2S2', 'T2S2: Articulated tractor (6+8)'), ('T2S3', 'T2S3: Articulated tractor (6+12)'), ('T3S1', 'T3S1: Articulated tractor (10+4)'), ('T3S2', 'T3S2: Articulated tractor (10+8)'), ('T3S3', 'T3S3: Articulated tractor (10+12)'), ('T2S1R2', 'T2S1R2: Tractor-Semitrailer-Trailer (6+4+8)'), ('T2S2R2', 'T2S2R2: Tractor-Semitrailer-Trailer (6+8+8)'), ('T2S1R3', 'T2S1R3: Tractor-Semitrailer-Trailer (6+4+12)'), ('T3S1R2', 'T3S1R2: Tractor-Semitrailer-Trailer (10+4+8)'), ('T3S1R3', 'T3S1R3: Tractor-Semitrailer-Trailer (10+4+12)'), ('T3S2R2', 'T3S2R2: Tractor-Semitrailer-Trailer (10+8+8)'), ('T3S2R3', 'T3S2R3: Tractor-Semitrailer-Trailer (10+8+12)'), ('T3S2R4', 'T3S2R4: Tractor-Semitrailer-Trailer (10+8+16)'), ('T2S2S2', 'T2S2S2: Tractor-Semitrailer-Semitrailer (6+8+8)'), ('T3S2S2', 'T3S2S2: Tractor-Semitrailer-Semitrailer (10+8+8)'), ('T3S3S2', 'T3S3S2: Tractor-Semitrailer-Semitrailer (10+12+8)'), ('OTROEV', 'OTROEV: Voluminous specialized'), ('OTROEGP', 'OTROEGP: Heavy load specialized'), ('OTROSG', 'OTROSG: Crane service'), ('CTR001', 'CTR001: Caballete'), ('CTR002', 'CTR002: Box'), ('CTR003', 'CTR003: Open Box'), ('CTR004', 'CTR004: Closed Box'), ('CTR005', 'CTR005: Front Loader Collection Box'), ('CTR006', 'CTR006: Refrigerated Box'), ('CTR007', 'CTR007: Dry Box'), ('CTR008', 'CTR008: Transfer Box'), ('CTR009', 'CTR009: Low Bed'), ('CTR010', 'CTR010: Container Chassis'), ('CTR011', 'CTR011: Conventional Chassis'), ('CTR012', 'CTR012: Special Equipment'), ('CTR013', 'CTR013: Stakes'), ('CTR014', 'CTR014: Madrina Gondola'), ('CTR015', 'CTR015: Industrial Crane'), ('CTR016', 'CTR016: Crane'), ('CTR017', 'CTR017: Integral'), ('CTR018', 'CTR018: Cage'), ('CTR019', 'CTR019: Half Rails'), ('CTR020', 'CTR020: Pallet or Cells'), ('CTR021', 'CTR021: Platform'), ('CTR022', 'CTR022: Platform with Crane'), ('CTR023', 'CTR023: Curtain-sided Platform'), ('CTR024', 'CTR024: Rails'), ('CTR025', 'CTR025: Refrigerator'), ('CTR026', 'CTR026: Mixer'), ('CTR027', 'CTR027: Half Box'), ('CTR028', 'CTR028: Tank'), ('CTR029', 'CTR029: Hopper'), ('CTR030', 'CTR030: Tractor'), ('CTR031', 'CTR031: Dump Truck'), ('CTR032', 'CTR032: Detachable Dump')], max_length=20, verbose_name='Configuración vehicular')),
                ('status', models.CharField(choices=[('Activa', 'Activa'), ('En mantenimiento', 'En mantenimiento'), ('Baja', 'Baja'), ('Por verificar', 'Por verificar')], default='Por verificar', max_length=20, verbose_name='Estatus')),
                ('unit_type', models.CharField(choices=[('TORTHON', 'TORTHON'), ('TRACTO', 'TRACTO'), ('CAJA', 'CAJA'), ('UNIDAD 1 TN', 'UNIDAD 1 TN'), ('UNIDAD 2.5 TN', 'UNIDAD 2.5 TN'), ('UNIDAD 3.5 TN', 'UNIDAD 3.5 TN'), ('UNIDAD 5 TN', 'UNIDAD 5 TN'), ('RABON', 'RABON'), ('CAJA 40’', 'CAJA 40’'), ('CAJA 48’', 'CAJA 48’'), ('CAJA 53’', 'CAJA 53’'), ('PLATAFORMA 40’', 'PLATAFORMA 40’'), ('PLATAFORMA 48’', 'PLATAFORMA 48’'), ('PIPA', 'PIPA'), ('TOLVA', 'TOLVA'), ('MADRINA', 'MADRINA'), ('VEHICULO UTILITARIO', 'VEHICULO UTILITARIO')], max_length=30, verbose_name='Tipo de unidad')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_panel.supplier', verbose_name='Proveedor')),
            ],
            options={
                'verbose_name': 'Vehículo',
                'verbose_name_plural': 'Vehículos',
            },
        ),
        migrations.AddField(
            model_name='operation',
            name='vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_panel.vehicle', verbose_name='Vehículo'),
        ),
        migrations.AddField(
            model_name='operation',
            name='vehicle_box',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operation_box', to='operations_panel.vehicle', verbose_name='Caja'),
        ),
    ]
